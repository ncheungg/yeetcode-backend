[
  {
    "acRate": 51.175293108378604,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1601",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Maximum Number of Achievable Transfer Requests",
    "titleSlug": "maximum-number-of-achievable-transfer-requests",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Backtracking",
        "id": "VG9waWNUYWdOb2RlOjE0",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "id": "VG9waWNUYWdOb2RlOjE5",
        "slug": "bit-manipulation"
      },
      {
        "name": "Enumeration",
        "id": "VG9waWNUYWdOb2RlOjYxMDY2",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 75.43275632490013,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1602",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Find Nearest Right Node in Binary Tree",
    "titleSlug": "find-nearest-right-node-in-binary-tree",
    "topicTags": [
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIy",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "acRate": 88.01602565868873,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1603",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Design Parking System",
    "titleSlug": "design-parking-system",
    "topicTags": [
      {
        "name": "Design",
        "id": "VG9waWNUYWdOb2RlOjI1",
        "slug": "design"
      },
      {
        "name": "Simulation",
        "id": "VG9waWNUYWdOb2RlOjYxMDU1",
        "slug": "simulation"
      },
      {
        "name": "Counting",
        "id": "VG9waWNUYWdOb2RlOjYxMDYy",
        "slug": "counting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 47.16321683067527,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1604",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Alert Using Same Key-Card Three or More Times in a One Hour Period",
    "titleSlug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 77.99507352392327,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1605",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Find Valid Matrix Given Row and Column Sums",
    "titleSlug": "find-valid-matrix-given-row-and-column-sums",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Matrix",
        "id": "VG9waWNUYWdOb2RlOjYxMDUz",
        "slug": "matrix"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 43.020915690361534,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1606",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Find Servers That Handled Most Number of Requests",
    "titleSlug": "find-servers-that-handled-most-number-of-requests",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "id": "VG9waWNUYWdOb2RlOjYxMDUw",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "id": "VG9waWNUYWdOb2RlOjYxMDcw",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 55.44786778208529,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1607",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Sellers With No Sales",
    "titleSlug": "sellers-with-no-sales",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 60.13772473748169,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1608",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Special Array With X Elements Greater Than or Equal X",
    "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "id": "VG9waWNUYWdOb2RlOjEx",
        "slug": "binary-search"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 53.9025073726631,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1609",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Even Odd Tree",
    "titleSlug": "even-odd-tree",
    "topicTags": [
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Breadth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIy",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 37.36430085203927,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1610",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Maximum Number of Visible Points",
    "titleSlug": "maximum-number-of-visible-points",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Geometry",
        "id": "VG9waWNUYWdOb2RlOjM4",
        "slug": "geometry"
      },
      {
        "name": "Sliding Window",
        "id": "VG9waWNUYWdOb2RlOjU1ODIx",
        "slug": "sliding-window"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 63.41450641529196,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1611",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimum One Bit Operations to Make Integers Zero",
    "titleSlug": "minimum-one-bit-operations-to-make-integers-zero",
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "id": "VG9waWNUYWdOb2RlOjE5",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "id": "VG9waWNUYWdOb2RlOjMz",
        "slug": "memoization"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 70.1137171286425,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1612",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Check If Two Expression Trees are Equivalent",
    "titleSlug": "check-if-two-expression-trees-are-equivalent",
    "topicTags": [
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIx",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 75.95326951160149,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1613",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Find the Missing IDs",
    "titleSlug": "find-the-missing-ids",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 82.54885154747585,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1614",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Maximum Nesting Depth of the Parentheses",
    "titleSlug": "maximum-nesting-depth-of-the-parentheses",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Stack",
        "id": "VG9waWNUYWdOb2RlOjE1",
        "slug": "stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 58.18355287455373,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1615",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Maximal Network Rank",
    "titleSlug": "maximal-network-rank",
    "topicTags": [
      {
        "name": "Graph",
        "id": "VG9waWNUYWdOb2RlOjI0",
        "slug": "graph"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 31.3791305481327,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1616",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Split Two Strings to Make Palindrome",
    "titleSlug": "split-two-strings-to-make-palindrome",
    "topicTags": [
      {
        "name": "Two Pointers",
        "id": "VG9waWNUYWdOb2RlOjk=",
        "slug": "two-pointers"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 65.9061334258697,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1617",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Count Subtrees With Max Distance Between Cities",
    "titleSlug": "count-subtrees-with-max-distance-between-cities",
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "id": "VG9waWNUYWdOb2RlOjE5",
        "slug": "bit-manipulation"
      },
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Enumeration",
        "id": "VG9waWNUYWdOb2RlOjYxMDY2",
        "slug": "enumeration"
      },
      {
        "name": "Bitmask",
        "id": "VG9waWNUYWdOb2RlOjYxMDc4",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 59.25963182778392,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1618",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Maximum Font to Fit a Sentence in a Screen",
    "titleSlug": "maximum-font-to-fit-a-sentence-in-a-screen",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Binary Search",
        "id": "VG9waWNUYWdOb2RlOjEx",
        "slug": "binary-search"
      },
      {
        "name": "Interactive",
        "id": "VG9waWNUYWdOb2RlOjYxMDU5",
        "slug": "interactive"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 64.88168175814383,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1619",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Mean of Array After Removing Some Elements",
    "titleSlug": "mean-of-array-after-removing-some-elements",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 37.68810205675605,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1620",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Coordinate With Maximum Network Quality",
    "titleSlug": "coordinate-with-maximum-network-quality",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Enumeration",
        "id": "VG9waWNUYWdOb2RlOjYxMDY2",
        "slug": "enumeration"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 42.13022854678741,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1621",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Number of Sets of K Non-Overlapping Line Segments",
    "titleSlug": "number-of-sets-of-k-non-overlapping-line-segments",
    "topicTags": [
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 15.977699698838377,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1622",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Fancy Sequence",
    "titleSlug": "fancy-sequence",
    "topicTags": [
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Design",
        "id": "VG9waWNUYWdOb2RlOjI1",
        "slug": "design"
      },
      {
        "name": "Segment Tree",
        "id": "VG9waWNUYWdOb2RlOjI5",
        "slug": "segment-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 87.72692265375728,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1623",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "All Valid Triplets That Can Represent a Country",
    "titleSlug": "all-valid-triplets-that-can-represent-a-country",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 59.078875296695266,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1624",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Largest Substring Between Two Equal Characters",
    "titleSlug": "largest-substring-between-two-equal-characters",
    "topicTags": [
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 65.89173217371913,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1625",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Lexicographically Smallest String After Applying Operations",
    "titleSlug": "lexicographically-smallest-string-after-applying-operations",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Breadth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIy",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 41.172933974639264,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1626",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Best Team With No Conflicts",
    "titleSlug": "best-team-with-no-conflicts",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 46.02853455192382,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1627",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Graph Connectivity With Threshold",
    "titleSlug": "graph-connectivity-with-threshold",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Union Find",
        "id": "VG9waWNUYWdOb2RlOjIz",
        "slug": "union-find"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 82.7800241186068,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1628",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Design an Expression Tree With Evaluate Function",
    "titleSlug": "design-an-expression-tree-with-evaluate-function",
    "topicTags": [
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Stack",
        "id": "VG9waWNUYWdOb2RlOjE1",
        "slug": "stack"
      },
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Design",
        "id": "VG9waWNUYWdOb2RlOjI1",
        "slug": "design"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 59.32063768958666,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1629",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Slowest Key",
    "titleSlug": "slowest-key",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 80.0518963494828,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1630",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Arithmetic Subarrays",
    "titleSlug": "arithmetic-subarrays",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 55.39710481081864,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1631",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Path With Minimum Effort",
    "titleSlug": "path-with-minimum-effort",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "id": "VG9waWNUYWdOb2RlOjEx",
        "slug": "binary-search"
      },
      {
        "name": "Depth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIx",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIy",
        "slug": "breadth-first-search"
      },
      {
        "name": "Union Find",
        "id": "VG9waWNUYWdOb2RlOjIz",
        "slug": "union-find"
      },
      {
        "name": "Heap (Priority Queue)",
        "id": "VG9waWNUYWdOb2RlOjYxMDUw",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Matrix",
        "id": "VG9waWNUYWdOb2RlOjYxMDUz",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 41.01030102588949,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1632",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Rank Transform of a Matrix",
    "titleSlug": "rank-transform-of-a-matrix",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Union Find",
        "id": "VG9waWNUYWdOb2RlOjIz",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "id": "VG9waWNUYWdOb2RlOjI0",
        "slug": "graph"
      },
      {
        "name": "Topological Sort",
        "id": "VG9waWNUYWdOb2RlOjI2",
        "slug": "topological-sort"
      },
      {
        "name": "Matrix",
        "id": "VG9waWNUYWdOb2RlOjYxMDUz",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 68.33305127771196,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1633",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Percentage of Users Attended a Contest",
    "titleSlug": "percentage-of-users-attended-a-contest",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 53.83229937962778,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1634",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Add Two Polynomials Represented as Linked Lists",
    "titleSlug": "add-two-polynomials-represented-as-linked-lists",
    "topicTags": [
      {
        "name": "Linked List",
        "id": "VG9waWNUYWdOb2RlOjc=",
        "slug": "linked-list"
      },
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Two Pointers",
        "id": "VG9waWNUYWdOb2RlOjk=",
        "slug": "two-pointers"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 52.91483539265279,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1635",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Hopper Company Queries I",
    "titleSlug": "hopper-company-queries-i",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 68.8884199933453,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1636",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Sort Array by Increasing Frequency",
    "titleSlug": "sort-array-by-increasing-frequency",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 84.23753323692681,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1637",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Widest Vertical Area Between Two Points Containing No Points",
    "titleSlug": "widest-vertical-area-between-two-points-containing-no-points",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 71.38251469751565,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1638",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Count Substrings That Differ by One Character",
    "titleSlug": "count-substrings-that-differ-by-one-character",
    "topicTags": [
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 43.11210762331839,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1639",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Number of Ways to Form a Target String Given a Dictionary",
    "titleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 56.14779436767752,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1640",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Check Array Formation Through Concatenation",
    "titleSlug": "check-array-formation-through-concatenation",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 77.23639605643731,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1641",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Count Sorted Vowel Strings",
    "titleSlug": "count-sorted-vowel-strings",
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 48.29126874345388,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1642",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Furthest Building You Can Reach",
    "titleSlug": "furthest-building-you-can-reach",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "id": "VG9waWNUYWdOb2RlOjYxMDUw",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 46.88560590936315,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1643",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Kth Smallest Instructions",
    "titleSlug": "kth-smallest-instructions",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Combinatorics",
        "id": "VG9waWNUYWdOb2RlOjYxMDU2",
        "slug": "combinatorics"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 59.48296505932296,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1644",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Lowest Common Ancestor of a Binary Tree II",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-ii",
    "topicTags": [
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIx",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 38.844573362339865,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1645",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Hopper Company Queries II",
    "titleSlug": "hopper-company-queries-ii",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 50.17145333792242,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1646",
    "isFavor": false,
    "paidOnly": false,
    "status": "notac",
    "title": "Get Maximum in Generated Array",
    "titleSlug": "get-maximum-in-generated-array",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Simulation",
        "id": "VG9waWNUYWdOb2RlOjYxMDU1",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 59.1840817347194,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1647",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Minimum Deletions to Make Character Frequencies Unique",
    "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
    "topicTags": [
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 30.441889658535704,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1648",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Sell Diminishing-Valued Colored Balls",
    "titleSlug": "sell-diminishing-valued-colored-balls",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Binary Search",
        "id": "VG9waWNUYWdOb2RlOjEx",
        "slug": "binary-search"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "id": "VG9waWNUYWdOb2RlOjYxMDUw",
        "slug": "heap-priority-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 37.2457417605838,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1649",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Create Sorted Array through Instructions",
    "titleSlug": "create-sorted-array-through-instructions",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "id": "VG9waWNUYWdOb2RlOjEx",
        "slug": "binary-search"
      },
      {
        "name": "Divide and Conquer",
        "id": "VG9waWNUYWdOb2RlOjEy",
        "slug": "divide-and-conquer"
      },
      {
        "name": "Binary Indexed Tree",
        "id": "VG9waWNUYWdOb2RlOjI4",
        "slug": "binary-indexed-tree"
      },
      {
        "name": "Segment Tree",
        "id": "VG9waWNUYWdOb2RlOjI5",
        "slug": "segment-tree"
      },
      {
        "name": "Merge Sort",
        "id": "VG9waWNUYWdOb2RlOjYxMDUx",
        "slug": "merge-sort"
      },
      {
        "name": "Ordered Set",
        "id": "VG9waWNUYWdOb2RlOjYxMDcw",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 77.29588386456876,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1650",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Lowest Common Ancestor of a Binary Tree III",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
    "topicTags": [
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 67.97935904399782,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1651",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Hopper Company Queries III",
    "titleSlug": "hopper-company-queries-iii",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 61.34528952306149,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1652",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Defuse the Bomb",
    "titleSlug": "defuse-the-bomb",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 58.90372160646513,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1653",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimum Deletions to Make String Balanced",
    "titleSlug": "minimum-deletions-to-make-string-balanced",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Stack",
        "id": "VG9waWNUYWdOb2RlOjE1",
        "slug": "stack"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 28.759152836708026,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1654",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimum Jumps to Reach Home",
    "titleSlug": "minimum-jumps-to-reach-home",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Breadth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIy",
        "slug": "breadth-first-search"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 39.0357698289269,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1655",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Distribute Repeating Integers",
    "titleSlug": "distribute-repeating-integers",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Backtracking",
        "id": "VG9waWNUYWdOb2RlOjE0",
        "slug": "backtracking"
      },
      {
        "name": "Bit Manipulation",
        "id": "VG9waWNUYWdOb2RlOjE5",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "id": "VG9waWNUYWdOb2RlOjYxMDc4",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 85.50031502376999,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1656",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Design an Ordered Stream",
    "titleSlug": "design-an-ordered-stream",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "Design",
        "id": "VG9waWNUYWdOb2RlOjI1",
        "slug": "design"
      },
      {
        "name": "Data Stream",
        "id": "VG9waWNUYWdOb2RlOjYxMDYz",
        "slug": "data-stream"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 56.419070393065304,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1657",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Determine if Two Strings Are Close",
    "titleSlug": "determine-if-two-strings-are-close",
    "topicTags": [
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 37.59391352389934,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1658",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimum Operations to Reduce X to Zero",
    "titleSlug": "minimum-operations-to-reduce-x-to-zero",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "Binary Search",
        "id": "VG9waWNUYWdOb2RlOjEx",
        "slug": "binary-search"
      },
      {
        "name": "Sliding Window",
        "id": "VG9waWNUYWdOb2RlOjU1ODIx",
        "slug": "sliding-window"
      },
      {
        "name": "Prefix Sum",
        "id": "VG9waWNUYWdOb2RlOjYxMDY4",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 38.236919675755345,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1659",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Maximize Grid Happiness",
    "titleSlug": "maximize-grid-happiness",
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "id": "VG9waWNUYWdOb2RlOjE5",
        "slug": "bit-manipulation"
      },
      {
        "name": "Memoization",
        "id": "VG9waWNUYWdOb2RlOjMz",
        "slug": "memoization"
      },
      {
        "name": "Bitmask",
        "id": "VG9waWNUYWdOb2RlOjYxMDc4",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 72.41606319947334,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1660",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Correct a Binary Tree",
    "titleSlug": "correct-a-binary-tree",
    "topicTags": [
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIx",
        "slug": "depth-first-search"
      },
      {
        "name": "Breadth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIy",
        "slug": "breadth-first-search"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 79.19156125097861,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1661",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Average Time of Process per Machine",
    "titleSlug": "average-time-of-process-per-machine",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 83.3025615822436,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1662",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Check If Two String Arrays are Equivalent",
    "titleSlug": "check-if-two-string-arrays-are-equivalent",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 66.83869053660517,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1663",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Smallest String With A Given Numeric Value",
    "titleSlug": "smallest-string-with-a-given-numeric-value",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 63.32816308442278,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1664",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Ways to Make a Fair Array",
    "titleSlug": "ways-to-make-a-fair-array",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 56.17644603956264,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1665",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimum Initial Energy to Finish Tasks",
    "titleSlug": "minimum-initial-energy-to-finish-tasks",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 69.5406723120349,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1666",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Change the Root of a Binary Tree",
    "titleSlug": "change-the-root-of-a-binary-tree",
    "topicTags": [
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIx",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 66.56003558170963,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1667",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Fix Names in a Table",
    "titleSlug": "fix-names-in-a-table",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 39.574233067228995,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1668",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Maximum Repeating Substring",
    "titleSlug": "maximum-repeating-substring",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "String Matching",
        "id": "VG9waWNUYWdOb2RlOjYxMDUy",
        "slug": "string-matching"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 74.31149262169303,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1669",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Merge In Between Linked Lists",
    "titleSlug": "merge-in-between-linked-lists",
    "topicTags": [
      {
        "name": "Linked List",
        "id": "VG9waWNUYWdOb2RlOjc=",
        "slug": "linked-list"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 56.386794747081716,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1670",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Design Front Middle Back Queue",
    "titleSlug": "design-front-middle-back-queue",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Linked List",
        "id": "VG9waWNUYWdOb2RlOjc=",
        "slug": "linked-list"
      },
      {
        "name": "Design",
        "id": "VG9waWNUYWdOb2RlOjI1",
        "slug": "design"
      },
      {
        "name": "Queue",
        "id": "VG9waWNUYWdOb2RlOjM0",
        "slug": "queue"
      },
      {
        "name": "Data Stream",
        "id": "VG9waWNUYWdOb2RlOjYxMDYz",
        "slug": "data-stream"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 42.49407426915987,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1671",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimum Number of Removals to Make Mountain Array",
    "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Binary Search",
        "id": "VG9waWNUYWdOb2RlOjEx",
        "slug": "binary-search"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 88.12276535687083,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1672",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Richest Customer Wealth",
    "titleSlug": "richest-customer-wealth",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Matrix",
        "id": "VG9waWNUYWdOb2RlOjYxMDUz",
        "slug": "matrix"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": true
  },
  {
    "acRate": 49.27960805879118,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1673",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Find the Most Competitive Subsequence",
    "titleSlug": "find-the-most-competitive-subsequence",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Stack",
        "id": "VG9waWNUYWdOb2RlOjE1",
        "slug": "stack"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Monotonic Stack",
        "id": "VG9waWNUYWdOb2RlOjYxMDU0",
        "slug": "monotonic-stack"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 38.63648909743307,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1674",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimum Moves to Make Array Complementary",
    "titleSlug": "minimum-moves-to-make-array-complementary",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "Prefix Sum",
        "id": "VG9waWNUYWdOb2RlOjYxMDY4",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 52.002945169232184,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1675",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimize Deviation in Array",
    "titleSlug": "minimize-deviation-in-array",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Heap (Priority Queue)",
        "id": "VG9waWNUYWdOb2RlOjYxMDUw",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Ordered Set",
        "id": "VG9waWNUYWdOb2RlOjYxMDcw",
        "slug": "ordered-set"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 79.23360009346341,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1676",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Lowest Common Ancestor of a Binary Tree IV",
    "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iv",
    "topicTags": [
      {
        "name": "Tree",
        "id": "VG9waWNUYWdOb2RlOjIw",
        "slug": "tree"
      },
      {
        "name": "Depth-First Search",
        "id": "VG9waWNUYWdOb2RlOjIx",
        "slug": "depth-first-search"
      },
      {
        "name": "Binary Tree",
        "id": "VG9waWNUYWdOb2RlOjYxMDU3",
        "slug": "binary-tree"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 39.017928110924665,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1677",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Product's Worth Over Invoices",
    "titleSlug": "products-worth-over-invoices",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 86.15718302615618,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1678",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Goal Parser Interpretation",
    "titleSlug": "goal-parser-interpretation",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 57.322260677894,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1679",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Max Number of K-Sum Pairs",
    "titleSlug": "max-number-of-k-sum-pairs",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "Two Pointers",
        "id": "VG9waWNUYWdOb2RlOjk=",
        "slug": "two-pointers"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 56.95769120385511,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1680",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Concatenation of Consecutive Binary Numbers",
    "titleSlug": "concatenation-of-consecutive-binary-numbers",
    "topicTags": [
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Bit Manipulation",
        "id": "VG9waWNUYWdOb2RlOjE5",
        "slug": "bit-manipulation"
      },
      {
        "name": "Simulation",
        "id": "VG9waWNUYWdOb2RlOjYxMDU1",
        "slug": "simulation"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 37.36270022883295,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1681",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Minimum Incompatibility",
    "titleSlug": "minimum-incompatibility",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Bit Manipulation",
        "id": "VG9waWNUYWdOb2RlOjE5",
        "slug": "bit-manipulation"
      },
      {
        "name": "Bitmask",
        "id": "VG9waWNUYWdOb2RlOjYxMDc4",
        "slug": "bitmask"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 49.40098661028894,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1682",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Longest Palindromic Subsequence II",
    "titleSlug": "longest-palindromic-subsequence-ii",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 90.90635738831615,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1683",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Invalid Tweets",
    "titleSlug": "invalid-tweets",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 81.97336119838822,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1684",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Count the Number of Consistent Strings",
    "titleSlug": "count-the-number-of-consistent-strings",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Bit Manipulation",
        "id": "VG9waWNUYWdOb2RlOjE5",
        "slug": "bit-manipulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 64.72524624157595,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1685",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Sum of Absolute Differences in a Sorted Array",
    "titleSlug": "sum-of-absolute-differences-in-a-sorted-array",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Prefix Sum",
        "id": "VG9waWNUYWdOb2RlOjYxMDY4",
        "slug": "prefix-sum"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 54.47525873221216,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1686",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Stone Game VI",
    "titleSlug": "stone-game-vi",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      },
      {
        "name": "Heap (Priority Queue)",
        "id": "VG9waWNUYWdOb2RlOjYxMDUw",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Game Theory",
        "id": "VG9waWNUYWdOb2RlOjYxMDcz",
        "slug": "game-theory"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 38.69198657608251,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1687",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Delivering Boxes from Storage to Ports",
    "titleSlug": "delivering-boxes-from-storage-to-ports",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Segment Tree",
        "id": "VG9waWNUYWdOb2RlOjI5",
        "slug": "segment-tree"
      },
      {
        "name": "Queue",
        "id": "VG9waWNUYWdOb2RlOjM0",
        "slug": "queue"
      },
      {
        "name": "Heap (Priority Queue)",
        "id": "VG9waWNUYWdOb2RlOjYxMDUw",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "id": "VG9waWNUYWdOb2RlOjYxMDcx",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 83.22777793844048,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1688",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Count of Matches in Tournament",
    "titleSlug": "count-of-matches-in-tournament",
    "topicTags": [
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Simulation",
        "id": "VG9waWNUYWdOb2RlOjYxMDU1",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 89.51960623647285,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1689",
    "isFavor": false,
    "paidOnly": false,
    "status": "ac",
    "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
    "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Greedy",
        "id": "VG9waWNUYWdOb2RlOjE3",
        "slug": "greedy"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 58.40628730600875,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1690",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Stone Game VII",
    "titleSlug": "stone-game-vii",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Math",
        "id": "VG9waWNUYWdOb2RlOjg=",
        "slug": "math"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Game Theory",
        "id": "VG9waWNUYWdOb2RlOjYxMDcz",
        "slug": "game-theory"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 54.27756653992395,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1691",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Maximum Height by Stacking Cuboids ",
    "titleSlug": "maximum-height-by-stacking-cuboids",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 62.38172920065252,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1692",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Count Ways to Distribute Candies",
    "titleSlug": "count-ways-to-distribute-candies",
    "topicTags": [
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 89.7736565195254,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1693",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Daily Leads and Partners",
    "titleSlug": "daily-leads-and-partners",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 64.98140764302674,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1694",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Reformat Phone Number",
    "titleSlug": "reformat-phone-number",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 57.643427542042424,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1695",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Maximum Erasure Value",
    "titleSlug": "maximum-erasure-value",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Hash Table",
        "id": "VG9waWNUYWdOb2RlOjY=",
        "slug": "hash-table"
      },
      {
        "name": "Sliding Window",
        "id": "VG9waWNUYWdOb2RlOjU1ODIx",
        "slug": "sliding-window"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 46.26645361809094,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1696",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Jump Game VI",
    "titleSlug": "jump-game-vi",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Dynamic Programming",
        "id": "VG9waWNUYWdOb2RlOjEz",
        "slug": "dynamic-programming"
      },
      {
        "name": "Queue",
        "id": "VG9waWNUYWdOb2RlOjM0",
        "slug": "queue"
      },
      {
        "name": "Sliding Window",
        "id": "VG9waWNUYWdOb2RlOjU1ODIx",
        "slug": "sliding-window"
      },
      {
        "name": "Heap (Priority Queue)",
        "id": "VG9waWNUYWdOb2RlOjYxMDUw",
        "slug": "heap-priority-queue"
      },
      {
        "name": "Monotonic Queue",
        "id": "VG9waWNUYWdOb2RlOjYxMDcx",
        "slug": "monotonic-queue"
      }
    ],
    "hasSolution": true,
    "hasVideoSolution": false
  },
  {
    "acRate": 50.41210588286599,
    "difficulty": "Hard",
    "freqBar": null,
    "frontendQuestionId": "1697",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Checking Existence of Edge Length Limited Paths",
    "titleSlug": "checking-existence-of-edge-length-limited-paths",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Union Find",
        "id": "VG9waWNUYWdOb2RlOjIz",
        "slug": "union-find"
      },
      {
        "name": "Graph",
        "id": "VG9waWNUYWdOb2RlOjI0",
        "slug": "graph"
      },
      {
        "name": "Sorting",
        "id": "VG9waWNUYWdOb2RlOjYxMDQ5",
        "slug": "sorting"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 63.307033172138794,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1698",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Number of Distinct Substrings in a String",
    "titleSlug": "number-of-distinct-substrings-in-a-string",
    "topicTags": [
      {
        "name": "String",
        "id": "VG9waWNUYWdOb2RlOjEw",
        "slug": "string"
      },
      {
        "name": "Trie",
        "id": "VG9waWNUYWdOb2RlOjI3",
        "slug": "trie"
      },
      {
        "name": "Rolling Hash",
        "id": "VG9waWNUYWdOb2RlOjU2NTk4",
        "slug": "rolling-hash"
      },
      {
        "name": "Suffix Array",
        "id": "VG9waWNUYWdOb2RlOjU2Njk4",
        "slug": "suffix-array"
      },
      {
        "name": "Hash Function",
        "id": "VG9waWNUYWdOb2RlOjYxMDY1",
        "slug": "hash-function"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 85.09174983171881,
    "difficulty": "Medium",
    "freqBar": null,
    "frontendQuestionId": "1699",
    "isFavor": false,
    "paidOnly": true,
    "status": null,
    "title": "Number of Calls Between Two Persons",
    "titleSlug": "number-of-calls-between-two-persons",
    "topicTags": [
      {
        "name": "Database",
        "id": "VG9waWNUYWdOb2RlOjYxMDQz",
        "slug": "database"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  },
  {
    "acRate": 68.02749529653357,
    "difficulty": "Easy",
    "freqBar": null,
    "frontendQuestionId": "1700",
    "isFavor": false,
    "paidOnly": false,
    "status": null,
    "title": "Number of Students Unable to Eat Lunch",
    "titleSlug": "number-of-students-unable-to-eat-lunch",
    "topicTags": [
      {
        "name": "Array",
        "id": "VG9waWNUYWdOb2RlOjU=",
        "slug": "array"
      },
      {
        "name": "Stack",
        "id": "VG9waWNUYWdOb2RlOjE1",
        "slug": "stack"
      },
      {
        "name": "Queue",
        "id": "VG9waWNUYWdOb2RlOjM0",
        "slug": "queue"
      },
      {
        "name": "Simulation",
        "id": "VG9waWNUYWdOb2RlOjYxMDU1",
        "slug": "simulation"
      }
    ],
    "hasSolution": false,
    "hasVideoSolution": false
  }
]
